install.packages("slidify")
source("http://bioconductor.org/biocLite.R")
biocLite()
library(ggplot2)
search()
install.packages("slidify")
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("GenomicFeatures", "AnnotationDbi"))
library(GenomicFeatures)
search()
R.version.string
install.packages("swirl")
library(swirl)
swirl()
nxt()
swirl()
1
1L
1 / 0
0 / 0
x <-1
print(x)
x
msg <-"hello"
x <-
s
x <- ## Incomplete expression
s
x <-5 ## nothing printed
x ## auto-printing occurs
print(x) ## explicit printing
x <-1:20
x
x <-c(0.5, 0.6) ## numeric
x
x <-c(TRUE, FALSE) ## numeric
x
x <- c(T,F)
x
x <-c("a", "b", "c")
x
x <-9:29
x
x <- c(1+0i, 2+4i)
x
x <-c(0.5, 0.6, 0.88, 0.10)
x
x <- vector("numeric", length = 10)
x
x <- vector("integer", length = 10)
x
x <- vector("complex", length = 10)
x
x <- vector("logical", length = 10)
x
x <- vector("character", length = 10)
x
y <- c(1.7, "a")
y
y <- c(TRUE, 2)
y
y <- c("a", TRUE)
y
x <-0.6
class(x)
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m <- 1:10
m
dim(m)<- c(2,5)
m
x <- 1:3
y <- 10:12
cbind(x,y)
rbind(x,y)
x <- list(1, "a", TRUE, 1+4i)
x
x <- factor(c("yes", "yes", "no", "yes", "no"))
x
table(x)
unclass(x)
x <- factor(c("yes", "yes", "no", "yes", "no"), levels = c("yes", "no"))
x
is.na(x)
is.nan(x)
x <- c(1, 2, NA, 10, 3)
is.na(x)
is.nan(x)
x <- c(1, 2, NaN, NA, 4)
is.na(x)
is.nan(x)
x <-data.frame(foo = 1:4, bar = c(T,, T, F, F))
x <-data.frame(foo = 1:4, bar = c(T,T, F, F))
x
nrow(x)
ncol(x)
x <-1:3
names(x)
names(x) <- c("foo", "bar", "norf")
x
names(x)
x <- list(a = 1, b = 2, c = 3)
x
m <-matrix(1:4, nrow = 2, ncol = 2)
dimnames(x) <- list(c("a", "b"), c("c", "d"))
dimnames(m) <- list(c("a", "b"), c("c", "d"))
m
R.version.string
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
swirl()
5 + 7
x <- 5 + 7
x
y = x - 3
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555,z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
ans <- c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
bye()
swirl()
x <- c("a", "b", "c", "c", "d", "a")
x[1]
x[2]
x[1:4]
x[x > "a"]
u <- x > "a"
u
x[u]
x <- matrix(1:6, 2, 3)
x
x[1, 2]
x[2, 1]
x[1, ]
x[, 2]
x <- matrix(1:6, 2, 3)
x[1, 2]
x[1, 2, drop = FALSE]
x <- matrix(1:6, 2, 3)
x[1, ]
x[1, , drop=FALSE]
x <- list(foo = 1:4, bar = 0.6)
x
x[1]
x[[1]]
x$bar
x[["bar"]]
x["bar"]
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x[c(1, 3)]
name <- "foo"
x[[name]]
x$name
x$foo
x <- list(a = list(10, 12, 14), b = c(3.14, 2.81))
x[[c(1, 3)]]
x[[1]][[3]]
x <- list(aardvark = 1:5)
x$a
x[["a"]]
x[["a", exact = FALSE]]
x <- c(1, 2, NA, 4, NA, 5)
bad <- is.na(x)
x[!bad]
x <- c(1, 2, NA, 4, NA, 5)
y <- c("a", "b", NA, "d", NA, "f")
good <- complete.cases(x, y)
good
x[good]
y[good]
x <- 1:4; y<-6:9
x + y
x > 2
y == 8
x * y
x / y
x <- matrix(1:4, 2, 2); y <- matrix(rep(10, 4), 2, 2)
x * y
x / y
x %*% y
rep(10, 4)
data <- read.table("foo.txt")
getswd()
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
info()
help
?list.files
list.files(recursive = TRUE)
1 / 0
1 / inf
0 / 0
x <-1
print(x)
x
msg <-"hello"
msg
print(msg)
x <-5 ## nothing would be printe
x ##auto-printing occurs
x <-1:20
x
x <- c(0.5 , 0.6)
x <- c(TRUE, FALSE)
x <- c(1+0i, 2+4i)
x
x <- vector("numeric", length = 10)
x
y <- c(1.7, "a")
y
y <- c(TRUE, 2)
y
y <- c(TRUE, "a")
y
x <- 0.6
class(x)
x <-0:6
class(X0)
class(X)
class(x)
as.numeric(x)
class(x)
as.logical(x)
as.character(x)
x <- c("a", "b", "c")
as.numeric(x)
as.logical(x)
as.complex(x)
x <- 0:6
as.complex(x)
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m <- 1:10
m
dim(m) <- c(2, 5)
m
x <- 1:3
y <- 10:12
cbind(x, y)
rbind(x, y)
x <- list(1, "a", TRUE, 1+4i)
x
x <- factor(c("yes", "yes", "no", "yes", "no"))
x
table(x)
unclass(x)
x <- factor(c("yes", "yes", "no", "yes", "no"), levels = c("yes", "no"))
x
x <- c(1, 2, NA, 10, 3)
is.na(x)
is.nan(x)
is.na(x)
x <- c(1, 2, NaN, NA, 3)
is.nan(x)
is.na(x)
x <- data.frame(foo = 1:4, bar = c(T, F, F, F))
x
nrow(x)
ncol(x)
x <-1:
s
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "norf")
x
names(x)
x <-list(a = 1, b = 2, c = 3)
x
x <- c("a", "b", "c", "d", "a")
x[1]
x[2]
x[1:4]
x[x>"a"]
u <- x > "a"
u
x[u]
x ,- matrix(1:6, 2, 3)
x <- matrix(1:6, 2, 3)
x[1, 2]
x[2,1]
x[1, ]
x[, 2]
x <- matrix(1:6, 2, 3)
x[1, 2]
x[1. 2. drop= FALSE]
x[1, 2, drop= FALSE]
x <- matrix(1:6, 2, 3)
x[1, ]
x[1, , drop = FALSE]
x < - list(foo = 1:4, bar = 0.6)
x <- list(foo = 1:4, bar = 0.6)
x[1]
x[[1]]
x$bar
x[["bar"]]
x["bar"]
clear
clc
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x[c(1, 3)]
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
name <- "foo"
x[[name]]
x$name
x$foo
x ,- list(a = list(10, 12, 14), b = c(3.14, 2.81))
x <- list(a = list(10, 12, 14), b = c(3.14, 2.81))
x[[c(1, 3)]]
x <- list(aardvark = 1:5)
x$a
x[["a"]]
x[["a", exact = FALSE]]
x <- c(1, 2, NA, 4, NA, 5)
bad <- is.na(x)
x[!bad]
x <- c(1, 2, NA4, NA, 5)
x <- c(1, 2, NA, 4, NA, 5)
y <- c("a", "b", NA, "d", NA, "f")
good <- complete.cases(x, y)
good
x[good]
y[good]
airquality[1:6, ]
good <- complete.cases(airquality)
airquality[good, ][1:6, ]
x <- 1:4; y <- 6:9
x + y
x > 2
x >= 2
y == 8
x * y
x / y
x <- matrix(1:4, 2, 2); y <- matrix(rep()10, 4)
x <- matrix(1:4, 2, 2); y <- matrix(rep(10, 4), 2, 2)
y
x * y
x %*% y
data <- read.table("foo.txt")
y <- data.frame(a=1, b = "a")
dput(y)
dput(y, file = "y.R")
new.y <- dget("y.R")
new.y
x <- "foo"
y <- data.frame(a = 1, b = "a")
dump(c("x", "y"), file = "data.R")
rm(x, y)
source("data.R")
y
x
setwd("~/Downloads/Kaggle/Titanic")
initial <- read.table("train.csv")
initial <- read.csv("train.csv")
